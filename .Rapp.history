dateData <- getDateData (history.api)
historicalData <- dateData
nrow(historicalData)
names(historicalData)
str(historicalData$date)
summary(historicalData$date)
summary(historicalData$utcdate)
date = date - 1
max_calls_per_day = 450#
max_calls_per_minute = 10
Sys.sleep(60/(max_calls_per_minute + 1))
callCount = 1
callCount = callCount + 1
callCount
date
callCount
max_calls_per_day
max_calls_per_day <- 10
while((callCount <= max_calls_per_day)) {#
	history.api <- urlBuilder(ID, histDate(dateString(date)))#
	dateData <- getDateData (history.api)#
	historicalData <- rbind(historicalData, dateData)#
	date = date - 1#
	# wait 7 minutes in between api calls. total 450 api calls#
	Sys.sleep(60/(max_calls_per_minute + 1))#
	print(callCount)#
	callCount = callCount + 1#
}
history.api <- urlBuilder(ID, histDate(dateString(date)))#
	dateData <- getDateData (history.api)#
	historicalData <- rbind(historicalData, dateData)#
	date = date - 1
require(XML)#
require(RCurl)#
require(lubridate)#
require(plyr)#
require(stringr)#
require(jsonlite)#
#
urlBase = 'http://api.wunderground.com/api'#
key = '28ceb0f69590b457'#
max_calls_per_day = 10#
max_calls_per_minute = 10#
#
innerSunset.ID = 'KCASANFR156'#
#
urlBuilder <- function(pws, type) {#
	paste(urlBase,'/',key,'/',type,'/q/pws:',pws,'.json',sep='')#
}#
#
histDate <- function(date) {#
	paste('history_',date,sep='')#
}#
#
getDateData <- function(history.api) {#
	history.json <- getURL(history.api)#
	history.raw <- fromJSON(history.json)#
	history <- as.data.frame(history.raw$history$observations)#
	history$tempi.num <- as.numeric(history$tempi)#
	history$dewpti.num <- as.numeric(history$dewpti)#
	history <- within(history, #
		tempDiff <- tempi.num - dewpti.num)#
	history$tempDiff <- history$tempi.num - history$dewpti.num#
	history$fog <- as.factor(floor(history$tempDiff))#
	history$time <- as.POSIXct(paste(history$date$hour, history$date$min, sep=":"),#
		format = "%H:%M")#
	history#
}#
#
dateString <- function(d) {#
	year <- sprintf("%04d", year(d))#
	month <- sprintf("%02d", month(d))#
	day <- sprintf("%02d", day(d))#
	paste(year, month, day, sep = "")#
}#
#
ID = innerSunset.ID#
callCount = 1
date = Sys.Date()
history.api <- urlBuilder(ID, histDate(dateString(date)))#
	dateData <- getDateData (history.api)
historicalData <- dateData
date = date - 1
Sys.sleep(60/(max_calls_per_minute + 1))#
	print(callCount)#
	callCount = callCount + 1
date
while((callCount <= max_calls_per_day)) {#
	history.api <- urlBuilder(ID, histDate(dateString(date)))#
	dateData <- getDateData (history.api)#
	historicalData <- rbind(historicalData, dateData)#
	date = date - 1#
	# wait 7 minutes in between api calls. total 450 api calls#
	Sys.sleep(60/(max_calls_per_minute + 1))#
	print(callCount)#
	callCount = callCount + 1#
}
str(historicalData)
require(reshape2)
melt(historicalData$date)
?melt
t <- melt(historicalData$date)
str(t)
?flatten
t <- flatten(historicalData)
str(t)
getDateData <- function(history.api) {#
	history.json <- getURL(history.api)#
	history.raw <- fromJSON(history.json)#
	history <- as.data.frame(history.raw$history$observations)#
	history$tempi.num <- as.numeric(history$tempi)#
	history$dewpti.num <- as.numeric(history$dewpti)#
	history <- within(history, #
		tempDiff <- tempi.num - dewpti.num)#
	history$tempDiff <- history$tempi.num - history$dewpti.num#
	history$fog <- as.factor(floor(history$tempDiff))#
	history$time <- as.POSIXct(paste(history$date$hour, history$date$min, sep=":"),#
		format = "%H:%M")#
	flatten(history)#
}
ID = innerSunset.ID#
callCount = 1
date = Sys.Date()
history.api <- urlBuilder(ID, histDate(dateString(date)))#
	dateData <- getDateData (history.api)
historicalData <- dateData
str(historicalData)
date = date - 1
Sys.sleep(60/(max_calls_per_minute + 1))
print(callCount)#
	callCount = callCount + 1
history.api <- urlBuilder(ID, histDate(dateString(date)))#
	dateData <- getDateData (history.api)#
	historicalData <- rbind(historicalData, dateData)
str(historicalData)
date = date - 1#
	# wait 7 minutes in between api calls. total 450 api calls#
	Sys.sleep(60/(max_calls_per_minute + 1))#
	print(callCount)#
	callCount = callCount + 1
callCount
max_calls_per_day
while((callCount <= max_calls_per_day)) {#
	history.api <- urlBuilder(ID, histDate(dateString(date)))#
	dateData <- getDateData (history.api)#
	historicalData <- rbind(historicalData, dateData)#
	date = date - 1#
	# wait 7 minutes in between api calls. total 450 api calls#
	print(callCount)#
	callCount = callCount + 1#
	Sys.sleep(60/(max_calls_per_minute + 1))#
}
str(historicalData)
summary(date.mon)
summary(historicalData$date.mon)
nrow(historicalData[historicalData$fog < 4])
nrow(historicalData[historicalData$tempDiff < 4])
nrow(historicalData[historicalData$tempDiff < 4],)
nrow(historicalData[historicalData$tempDiff < 4,])
nrow(historicalData)
getData <- function() {#
	while((callCount <= max_calls_per_day)) {#
		print(callCount)#
		history.api <- urlBuilder(ID, histDate(dateString(date)))#
		dateData <- getDateData (history.api)#
		historicalData <- rbind(historicalData, dateData)#
		date = date - 1#
		# wait 7 minutes in between api calls. total 450 api calls#
		callCount = callCount + 1#
		Sys.sleep(60/(max_calls_per_minute + 1))#
	}#
}
getData
getData()
max_calls_per_day = 450
getData()
nrow(historicalData)
str(historicalData)
summary(as.numeric(historicalData$date.year))
summary(as.numeric(historicalData$date.month))
summary(as.numeric(historicalData$date.mon))
tail(historicalData$date.mon)
tail(historicalData$date.year)
tail(historicalData$date.mday)
str(dateData)
date
getData
ls()
ls
ls()
names(historicalData)
str(historicalData$UV)
ls
ls()
nrow(historicalData)
date
names(historicalData)
tail(historicalData)
tail(historicalData$date.pretty)
tail(historicalData)
myvars <- c('tempi', 'dewpti', 'tempDiff', 'fog', 'time', 'date.pretty')
data_short <- historicalData[,myvars]
tail(data_short)
tail(data_short, n = 20)
data_short
ls()\
ls()
max_calls_per_day
max_calls_per_day <- 100
date
callCount
ID = innerSunset.ID#
callCount = 1
getData
getData()
require(XML)#
require(RCurl)#
require(lubridate)#
require(plyr)#
require(stringr)#
require(jsonlite)
urlBASE
urlBase
getData()
nrow(historicalData)
getData
getData <- function() {#
	while((callCount < max_calls_per_day)) {#
		print(callCount, date)#
		history.api <- urlBuilder(ID, histDate(dateString(date)))#
		dateData <- getDateData (history.api)#
		historicalData <- rbind(historicalData, dateData)#
		date = date - 1#
		# wait 7 minutes in between api calls. total 450 api calls#
		callCount = callCount + 1#
		Sys.sleep(60/(max_calls_per_minute - 1))#
	}#
}
getData()
print(callCount)#
		print(date)
print c(callCount, date)
?cat
cat(callCount, date)
?sprintf
sprintf(callCount, date)
?as.String
?as.char
sprintf(as.character(callCount), date)
cat(as.character(callCount), date)
as.character(callCount)
callCount
date
print(as.character(callCount), date)
print c(as.character(callCount), date)
c(as.character(callCount), date)
callCount, date
as.data.frame(callCount, date)
print(c(as.character(callCount), date))
date
print(c(as.character(callCount), as.character(date)))
print(c(callCount, as.character(date)))
getData
callCount
getData <- function() {#
	while((callCount < max_calls_per_day)) {#
		print(c(callCount, as.character(date)))#
		history.api <- urlBuilder(ID, histDate(dateString(date)))#
		dateData <- getDateData (history.api)#
		historicalData <- rbind(historicalData, dateData)#
		date = date - 1#
		# wait 7 minutes in between api calls. total 450 api calls#
		callCount = callCount + 1#
		Sys.sleep(60/(max_calls_per_minute - 1))#
	}#
}
pwd()
cd()
getwd()
setwd("~/Documents/FogOrNot/data")
install.packages("ggmap")
library(ggmap)
mapImageData3 <- get_map(location = c(lon = -0.016179, lat = 51.538525),#
    color = "color",#
    source = "google",#
    maptype = "roadmap",#
    zoom = 16)
ggmap(mapImageData3,#
    extent = "device",#
    ylab = "Latitude",#
    xlab = "Longitude")
mapImageData1 <- get_map(location = c(lon = -0.016179, lat = 51.538525),#
    color = "color",#
    source = "google",#
    maptype = "satellite",#
    zoom = 17)#
ggmap(mapImageData1,#
    extent = "device",#
    ylab = "Latitude",#
    xlab = "Longitude")
map <- get_map(location = 'Europe', zoom = 4)
ggmap(map)
map <- get_map(location = 'San Francisco', zoom = 10)
ggmap(map)
map <- get_map(location = 'San Francisco', zoom = 20)
ggmap(map)
map <- get_map(location = 'San Francisco', zoom = 13)
ggmap(map)
map <- get_map(location = 'San Francisco', zoom = 11)
ggmap(map)
map <- get_map(location = 'San Francisco', zoom = 12)
ggmap(map)
map <- get_map(location = 'Twin Peaks, San Francisco', zoom = 12)
ggmap(map)
map <- get_map(location = 'Twin Peaks, San Francisco', zoom = 12.5)
map <- get_map(location = 'Twin Peaks, San Francisco', zoom = 12)
ggmap(map)
map <- get_map(location = 'Twin Peaks, San Francisco', zoom = "auto")
ggmap(map)
map <- get_map(location = 'Twin Peaks, San Francisco', zoom = 12)
ggmap(map)
?get_cloudmade
?get_cloudmademap
?geocode
geocode("inner sunset, san francisco", output = c("latlon"))
map <- get_map(location = 'Twin Peaks, San Francisco', zoom = 13)
ggmap(map)
map <- get_map(location = 'Twin Peaks, San Francisco', zoom = 12)
ggmap(map)
ggmap(map) +
geom_point(color = "blue")
name <- c("inner sunet", "west portal", "twin peaks", "outer richmond")#
ID <- c("KCASANFR320", "KCASANFR306", "KCASANFR34", "KCASANFR107")#
lat <- c(37.756, 37.740, 37.749, 37.772)#
lon <- c(-122.475, -122.471, -122.453, -122.511)]#
#
locations <- data.frame(name, ID, lat, lon)
lon <- c(-122.475, -122.471, -122.453, -122.511)#
#
locations <- data.frame(name, ID, lat, lon)
names(locations)
showMap <- ggmap(map, #
	base_layer = ggplot(locations, aes = (lat, lon))#
	)
showMap <- ggmap(map, base_layer = ggplot(locations, aes = (lat, lon)))
showMap <- ggmap(map, base_layer = ggplot(locations, aes = (x = lat, y = lon)))
?ggmap
showMap <- ggmap(map) +#
	geom_point(aes = (x = lat, y = lon), data = locations, alpha = .5)
showMap <- ggmap(map) +#
	geom_point(aes(x = lat, y = lon), data = locations, alpha = .5)
print(showMap)
locations
showMap <- ggmap(map) +#
	geom_point(aes(x = lat, y = lon), data = locations, colour = "blue")
print(showMap)
showMap <- ggmap(map) +#
	geom_point(aes(x = lat, y = lon), data = locations, colour = "blue", size = 4)
print(showMap)
ggmap(map) +#
	geom_point(aes(x = lat, y = lon), data = locations, colour = "blue", size = 4)
ggmap(map) +#
	geom_point(aes(x = locations$lat, y = locations$lon), data = locations, colour = "blue", size = 4)
?ggmap
showMap <- ggmap(map, base_layer = ggplot(locations, aes(x = lat, y = lon))
)
print(showMap)
map1 <- ggmap(map, base_layer = ggplot(locations, aes(x = lat, y = lon)))
showMap <- ggmap(map) +#
	geom_point(aes(x = lon, y = lat), data = locations, colour = "blue", size = 4)
print(showMap)
?geom_polygon
?heatmap
?geom_density2d
names(mtcar)
setwd("~/Documents/DataSci/FogOrNot/code")
require(XML)#
require(RCurl)#
require(lubridate)#
require(plyr)#
require(stringr)#
require(jsonlite)#
require(ggmap)#
require(ggplot2)#
# Load my other files#
source("wu_apis.R")#
source("mapping.R")#
source("forecasts.R")
home <- '94122'#
locations <- getLocations(home)#
basemap <- SFmap(home)
addFogForecasts
nrow(locations)
str(locations)
locations <- predictFog(locations)
showMaps()
showMaps <- function () {#
	map1hr <- fogMap_1hr(basemap, locations)#
	map3hr <- fogMap_3hr(basemap, locations)#
	map6hr <- fogMap_6hr(basemap, locations)#
	map12hr <- fogMap_12hr(basemap, locations)#
	map18hr <- fogMap_18hr(basemap, locations)#
	multiplot(map3hr, map6hr, map12hr, map18hr, cols = 2)#
}
showMaps()
fogMap_3hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_3hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.key.size = unit(2.5))#
}
showMaps()
fogMap_3hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_3hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.key.size = unit(.5, units = "cm"))#
}
showMaps()
fogMap_3hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_3hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.key.size = unit(.5, units = "cm"))# Functions for mapping#
#
SFmap <- function(home) {#
	get_map(#
		location = home,#
		zoom = 13,#
		maptype = c("terrain")#
		)#
}#
#
locationsMap <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat), data = locations, colour = "blue", size = 3)#
}#
#
fogMap_1hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_1hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) #
}#
#
fogMap_3hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_3hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}#
#
fogMap_6hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_6hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.title=element_blank()) #
}#
#
fogMap_12hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_12hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}#
#
fogMap_18hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_18hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}#
#
fogMap_24hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_24hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) #
}#
multiplot <- function(..., plotlist=NULL, cols) {#
    require(grid)#
#
    # Make a list from the ... arguments and plotlist#
    plots <- c(list(...), plotlist)#
#
    numPlots = length(plots)#
#
    # Make the panel#
    plotCols = cols                          # Number of columns of plots#
    plotRows = ceiling(numPlots/plotCols) # Number of rows needed, calculated from # of cols#
#
    # Set up the page#
    grid.newpage()#
    pushViewport(viewport(layout = grid.layout(plotRows, plotCols)))#
    vplayout <- function(x, y)#
        viewport(layout.pos.row = x, layout.pos.col = y)#
#
    # Make each plot, in the correct location#
    for (i in 1:numPlots) {#
        curRow = ceiling(i/plotCols)#
        curCol = (i-1) %% plotCols + 1#
        print(plots[[i]], vp = vplayout(curRow, curCol ))#
    }#
#
}#
}
showMaps()
fogMap_3hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_3hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}
fogMap_3hr(basemap, locations)
map3hr <- fogMap_3hr(basemap, locations)#
	map6hr <- fogMap_6hr(basemap, locations)#
	map12hr <- fogMap_12hr(basemap, locations)#
	map18hr <- fogMap_18hr(basemap, locations)#
	multiplot(map3hr, map6hr, map12hr, map18hr, cols = 2)
fogMap_12hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_12hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}
fogMap_12hr(basemap, locations)
?facet_wrap
fogMap_6hr(basemap, locations)
map3hr <- fogMap_3hr(basemap, locations)#
	map6hr <- fogMap_6hr(basemap, locations)#
	map12hr <- fogMap_12hr(basemap, locations)#
	map18hr <- fogMap_18hr(basemap, locations)#
	multiplot(map3hr, map6hr, map12hr, map18hr, cols = 2)
fogMap_12hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_12hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}#
#
fogMap_18hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_18hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}
map3hr <- fogMap_3hr(basemap, locations)#
	map6hr <- fogMap_6hr(basemap, locations)#
	map12hr <- fogMap_12hr(basemap, locations)#
	map18hr <- fogMap_18hr(basemap, locations)#
	multiplot(map3hr, map6hr, map12hr, map18hr, cols = 2)
map3hr <- fogMap_3hr(basemap, locations)#
	map6hr <- fogMap_6hr(basemap, locations)#
	map12hr <- fogMap_12hr(basemap, locations)#
	map18hr <- fogMap_18hr(basemap, locations)#
	multiplot(map3hr, map6hr, map12hr, map18hr, cols = 2)
# Functions for mapping#
#
SFmap <- function(home) {#
	get_map(#
		location = home,#
		zoom = 13,#
		maptype = c("terrain")#
		)#
}#
#
locationsMap <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat), data = locations, colour = "blue", size = 3)#
}#
#
fogMap_1hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_1hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) #
}#
#
fogMap_3hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_3hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}#
#
fogMap_6hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_6hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}#
#
fogMap_12hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_12hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}#
#
fogMap_18hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_18hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none")#
}#
#
fogMap_24hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_24hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) #
}#
multiplot <- function(..., plotlist=NULL, cols) {#
    require(grid)#
#
    # Make a list from the ... arguments and plotlist#
    plots <- c(list(...), plotlist)#
#
    numPlots = length(plots)#
#
    # Make the panel#
    plotCols = cols                          # Number of columns of plots#
    plotRows = ceiling(numPlots/plotCols) # Number of rows needed, calculated from # of cols#
#
    # Set up the page#
    grid.newpage()#
    pushViewport(viewport(layout = grid.layout(plotRows, plotCols)))#
    vplayout <- function(x, y)#
        viewport(layout.pos.row = x, layout.pos.col = y)#
#
    # Make each plot, in the correct location#
    for (i in 1:numPlots) {#
        curRow = ceiling(i/plotCols)#
        curCol = (i-1) %% plotCols + 1#
        print(plots[[i]], vp = vplayout(curRow, curCol ))#
    }#
#
}
map3hr <- fogMap_3hr(basemap, locations)#
	map6hr <- fogMap_6hr(basemap, locations)#
	map12hr <- fogMap_12hr(basemap, locations)#
	map18hr <- fogMap_18hr(basemap, locations)#
	multiplot(map3hr, map6hr, map12hr, map18hr, cols = 2)
source("mapping.R")
map3hr <- fogMap_3hr(basemap, locations)#
	map6hr <- fogMap_6hr(basemap, locations)#
	map12hr <- fogMap_12hr(basemap, locations)#
	map18hr <- fogMap_18hr(basemap, locations)#
	multiplot(map3hr, map6hr, map12hr, map18hr, cols = 2)
quartz()
fogMap_24hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_24hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none") +#
	ggtitle("fog_24hr")#
}
fogMap_24hr(basemap, locations)
# Functions for mapping#
#
SFmap <- function(home) {#
	get_map(#
		location = home,#
		zoom = 13,#
		maptype = c("terrain")#
		)#
}#
#
locationsMap <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat), data = locations, colour = "blue", size = 3)#
}#
#
fogMap_1hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_1hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none") +#
	ggtitle("fog_1hr")#
}#
#
fogMap_3hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_3hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none") +#
	ggtitle("fog_3hr")#
}#
#
fogMap_6hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_6hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none") +#
	ggtitle("fog_6hr")#
}#
#
fogMap_12hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_12hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none") +#
	ggtitle("fog_12hr")#
}#
#
fogMap_18hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_18hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none") +#
	ggtitle("fog_18hr")#
}#
#
fogMap_24hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_24hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none") +#
	ggtitle("fog_24hr")#
}#
multiplot <- function(..., plotlist=NULL, cols) {#
    require(grid)#
#
    # Make a list from the ... arguments and plotlist#
    plots <- c(list(...), plotlist)#
#
    numPlots = length(plots)#
#
    # Make the panel#
    plotCols = cols                          # Number of columns of plots#
    plotRows = ceiling(numPlots/plotCols) # Number of rows needed, calculated from # of cols#
#
    # Set up the page#
    grid.newpage()#
    pushViewport(viewport(layout = grid.layout(plotRows, plotCols)))#
    vplayout <- function(x, y)#
        viewport(layout.pos.row = x, layout.pos.col = y)#
#
    # Make each plot, in the correct location#
    for (i in 1:numPlots) {#
        curRow = ceiling(i/plotCols)#
        curCol = (i-1) %% plotCols + 1#
        print(plots[[i]], vp = vplayout(curRow, curCol ))#
    }#
#
}
names(locations0)
str(locations)
showMaps <- function () {#
	map1hr <- fogMap_1hr(basemap, locations)#
	map3hr <- fogMap_3hr(basemap, locations)#
	map6hr <- fogMap_6hr(basemap, locations)#
	map12hr <- fogMap_12hr(basemap, locations)#
	map18hr <- fogMap_18hr(basemap, locations)#
	map24hr <- fogMap_24hr(basemap, locations)#
	multiplot(map1hr, map3hr, map6hr, map12hr, map18hr, map24hr, cols = 3)#
}
map1hr <- fogMap_1hr(basemap, locations)#
	map3hr <- fogMap_3hr(basemap, locations)#
	map6hr <- fogMap_6hr(basemap, locations)#
	map12hr <- fogMap_12hr(basemap, locations)#
	map18hr <- fogMap_18hr(basemap, locations)#
	map24hr <- fogMap_24hr(basemap, locations)#
	multiplot(map1hr, map3hr, map6hr, map12hr, map18hr, map24hr, cols = 3)
fogMap_6hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_6hr), data = locations, colour = "blue", size = 20) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none", axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank()) +#
	ggtitle("fog_6hr")#
}
fogMap_6hr(basemap, locations)
source("mapping.R")
showMaps <- function () {#
	map1hr <- fogMap_1hr(basemap, locations)#
	map3hr <- fogMap_3hr(basemap, locations)#
	map6hr <- fogMap_6hr(basemap, locations)#
	map12hr <- fogMap_12hr(basemap, locations)#
	map18hr <- fogMap_18hr(basemap, locations)#
	map24hr <- fogMap_24hr(basemap, locations)#
	multiplot(map1hr, map3hr, map6hr, map12hr, map18hr, map24hr, cols = 3)#
}
showMaps()
ggsave("fog_all.png")
# Functions for mapping#
#
SFmap <- function(home) {#
	get_map(#
		location = home,#
		zoom = 13,#
		maptype = c("terrain")#
		)#
}#
#
locationsMap <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat), data = locations, colour = "blue", size = 3)#
}#
#
fogMap_1hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_1hr), data = locations, colour = "blue", size = 10) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none", axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank()) +#
	ggtitle("fog_1hr")#
}#
#
fogMap_3hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_3hr), data = locations, colour = "blue", size = 10) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none", axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank()) +#
	ggtitle("fog_3hr")#
}#
#
fogMap_6hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_6hr), data = locations, colour = "blue", size = 10) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none", axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank()) +#
	ggtitle("fog_6hr")#
}#
#
fogMap_12hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_12hr), data = locations, colour = "blue", size = 10) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none", axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank()) +#
	ggtitle("fog_12hr")#
}#
#
fogMap_18hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_18hr), data = locations, colour = "blue", size = 10) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none", axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank()) +#
	ggtitle("fog_18hr")#
}#
#
fogMap_24hr <- function(map, locations) {#
	ggmap(map) +#
	geom_point(aes(x = lon, y = lat, alpha = fog_24hr), data = locations, colour = "blue", size = 10) +#
	geom_point(aes(x = 37.763266, y = -122.473647, alpha = 5), data = locations, colour = "red", size = 2) +#
	theme(legend.position="none", axis.line=element_blank(),axis.text.x=element_blank(),#
          axis.text.y=element_blank(),axis.ticks=element_blank(),#
          axis.title.x=element_blank(),#
          axis.title.y=element_blank()) +#
	ggtitle("fog_24hr")#
}#
multiplot <- function(..., plotlist=NULL, cols) {#
    require(grid)#
#
    # Make a list from the ... arguments and plotlist#
    plots <- c(list(...), plotlist)#
#
    numPlots = length(plots)#
#
    # Make the panel#
    plotCols = cols                          # Number of columns of plots#
    plotRows = ceiling(numPlots/plotCols) # Number of rows needed, calculated from # of cols#
#
    # Set up the page#
    grid.newpage()#
    pushViewport(viewport(layout = grid.layout(plotRows, plotCols)))#
    vplayout <- function(x, y)#
        viewport(layout.pos.row = x, layout.pos.col = y)#
#
    # Make each plot, in the correct location#
    for (i in 1:numPlots) {#
        curRow = ceiling(i/plotCols)#
        curCol = (i-1) %% plotCols + 1#
        print(plots[[i]], vp = vplayout(curRow, curCol ))#
    }#
#
}
showMaps()
